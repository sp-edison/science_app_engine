/**
 * Copyright (c) 2016-present EDISON, KISTI. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package science.platform.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the SpUserDomain service. Represents a row in the &quot;SciencePlatformHook_SpUserDomain&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link science.platform.model.impl.SpUserDomainModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link science.platform.model.impl.SpUserDomainImpl}.
 * </p>
 *
 * @author Jerry h. Seo
 * @see SpUserDomain
 * @see science.platform.model.impl.SpUserDomainImpl
 * @see science.platform.model.impl.SpUserDomainModelImpl
 * @generated
 */
public interface SpUserDomainModel extends BaseModel<SpUserDomain> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a sp user domain model instance should use the {@link SpUserDomain} interface instead.
	 */

	/**
	 * Returns the primary key of this sp user domain.
	 *
	 * @return the primary key of this sp user domain
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this sp user domain.
	 *
	 * @param primaryKey the primary key of this sp user domain
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the sp user domain ID of this sp user domain.
	 *
	 * @return the sp user domain ID of this sp user domain
	 */
	public long getSpUserDomainId();

	/**
	 * Sets the sp user domain ID of this sp user domain.
	 *
	 * @param spUserDomainId the sp user domain ID of this sp user domain
	 */
	public void setSpUserDomainId(long spUserDomainId);

	/**
	 * Returns the sp domain ID of this sp user domain.
	 *
	 * @return the sp domain ID of this sp user domain
	 */
	public long getSpDomainId();

	/**
	 * Sets the sp domain ID of this sp user domain.
	 *
	 * @param spDomainId the sp domain ID of this sp user domain
	 */
	public void setSpDomainId(long spDomainId);

	/**
	 * Returns the sp user ID of this sp user domain.
	 *
	 * @return the sp user ID of this sp user domain
	 */
	public long getSpUserId();

	/**
	 * Sets the sp user ID of this sp user domain.
	 *
	 * @param spUserId the sp user ID of this sp user domain
	 */
	public void setSpUserId(long spUserId);

	/**
	 * Returns the sp user uuid of this sp user domain.
	 *
	 * @return the sp user uuid of this sp user domain
	 * @throws SystemException if a system exception occurred
	 */
	public String getSpUserUuid() throws SystemException;

	/**
	 * Sets the sp user uuid of this sp user domain.
	 *
	 * @param spUserUuid the sp user uuid of this sp user domain
	 */
	public void setSpUserUuid(String spUserUuid);

	/**
	 * Returns the ap active of this sp user domain.
	 *
	 * @return the ap active of this sp user domain
	 */
	public boolean getApActive();

	/**
	 * Returns <code>true</code> if this sp user domain is ap active.
	 *
	 * @return <code>true</code> if this sp user domain is ap active; <code>false</code> otherwise
	 */
	public boolean isApActive();

	/**
	 * Sets whether this sp user domain is ap active.
	 *
	 * @param apActive the ap active of this sp user domain
	 */
	public void setApActive(boolean apActive);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(science.platform.model.SpUserDomain spUserDomain);

	@Override
	public int hashCode();

	@Override
	public CacheModel<science.platform.model.SpUserDomain> toCacheModel();

	@Override
	public science.platform.model.SpUserDomain toEscapedModel();

	@Override
	public science.platform.model.SpUserDomain toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}